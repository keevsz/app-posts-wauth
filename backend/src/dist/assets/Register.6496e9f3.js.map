{"version":3,"mappings":"sTACO,MAAMA,EAASC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUhBC,EAAQD,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWfE,EAAaF,EAAO;AAAA;AAAA,ECtBlBG,oCCoBTC,EAAUC,eAAK,IAAMC,aAAO,yBAAY,2HAaxCC,EAAW,CAAC,CAAEC,YAAkB,IAAM,CACpC,MAAEC,UAASC,gBAAiBC,EAAiB,EAC7C,CAACC,EAAKC,CAAM,EAAIC,mBAASX,CAAU,EACnCY,EAAWC,IACXC,EAAWC,IAEX,CACJC,WACAC,eACAC,UAAW,CAAEC,QAAO,GAClBC,EAAiB,EAEfC,EAAW,MAAO,CAAEC,QAAOC,WAAUC,UAAmB,CACtDC,QAAO,MAAMlB,EACjBmB,EAAa,CAAEJ,QAAOC,WAAUC,OAAMf,KAAK,EAAC,EAE9CkB,EAAgCF,CAAI,EACpCX,EAASc,EAAWC,EAAkBJ,CAAI,CAAC,CAAC,EAC5Cb,EAAS,GAAG,GAGRkB,EAAc,MAAOC,GAAe,CACxC,MAAMC,EAAW,MAAMzB,EAAa0B,EAAUF,CAAK,CAAC,EAC7CC,IAASE,KAAKC,GAAG,GAGtB7B,SAAgB8B,EAACnC,EAAkB,MAGpCoC,EAAS,CAAC,aAAa,MAAM,SAAUpB,EAAaI,CAAQ,EAAE,UAC7De,EAACE,EAAK,CAAC,MAAM,UAAS,uBAAoB,EAC1CC,EAACC,EAAG,WACFJ,EAACK,EAAU,CAAC,KAAK,8CAA6C,WAC3DC,EAAI,CACH,KAAM,QACN,MAAM,QACN,OAAO,OACP,IAAI,cACJ,IAAKC,EAAY,EAER,EACbP,EAACK,EAAU,CAAC,KAAK,IAAG,WACjBC,EAAI,CACH,KAAM,QACN,MAAM,QACN,OAAO,OACP,IAAI,gBACJ,IAAKE,EAAc,EAEV,EACbR,EAACK,EAAU,CAAC,KAAK,IAAG,WACjBC,EAAI,CACH,KAAM,QACN,MAAM,QACN,OAAO,OACP,IAAI,eACJ,IAAI,GAAE,EAEG,GACT,EACNH,EAAC3C,EAAM,CAAC,QAAQ,QAAO,UACrBwC,EAACrC,EAAU,CACT,GAAG,QACH,KAAK,OACL,OAAO,kBACP,SAAW8C,GAAWf,EAAYe,EAAEC,OAAOf,MAAM,EAAE,EACvC,EACdK,EAACtC,EAAK,CAAC,IAAKW,EAAa,GAClB,EACT2B,EAACW,EAAS,CACR,YAAY,UAAS,GACjB/B,EAAS,OAAQ,CACnBgC,SAAU,kBACX,EACD,EACFZ,EAACW,EAAS,CACR,YAAY,wBAAoB,GAC5B/B,EAAS,QAAS,CACpBgC,SAAU,gBACVC,QAAS,CACPC,MACE,wJACFC,QAAS,gBACX,EACD,EACD,EACFf,EAACW,EAAS,CACR,KAAM,WACN,YAAY,gBAAY,GACpB/B,EAAS,WAAY,CACvBgC,SAAU,wBACX,EACD,EACFZ,EAACW,EAAS,CAAC,YAAY,0BAAyB,EAChDR,EAACC,EAAG,WACFJ,EAACgB,EAAM,CAAC,QAAQ,OAAO,MAAM,UAAU,KAAK,SAAQ,uBAE3C,EACThB,EAACgB,EAAM,CACL,QAAQ,OACR,QAAS/C,EACT,MAAM,YACN,KAAK,SAAQ,oBAGN,GACL,GACI,CAEhB","names":["Avatar","styled","Image","InputImage","pic_change","Loading","lazy","__vitePreload","Register","handleForm","loading","callEndpoint","useFetchAndLoad","pic","setPic","useState","navigate","useNavigate","dispatch","useDispatch","register","handleSubmit","formState","errors","useForm","onSubmit","email","password","name","user","registerUser","loadUserToLocalStorageAndCookie","createUser","createUserAdapter","uploadImage","files","response","uploadImg","data","url","_jsx","LoginForm","Title","_jsxs","Row","IconButton","Icon","google_icon","facebook_icon","e","target","TextInput","required","pattern","value","message","Button"],"sources":["../../src/styled-components/Globals.ts","../../src/assets/pic_change.png","../../src/pages/Login/components/Register.tsx"],"sourcesContent":["import styled from 'styled-components'\r\nexport const Avatar = styled.label`\r\n  margin: 0.1rem;\r\n  width: 6rem;\r\n  height: 6rem;\r\n  border-radius: 50%;\r\n  display: block;\r\n  @media screen and (max-height: 470px) {\r\n    display: none;\r\n  }\r\n`\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  cursor:pointer;\r\n  transition: all 0.3s;\r\n  :hover{\r\n    opacity:50%;\r\n  }\r\n`\r\n\r\nexport const InputImage = styled.input`\r\n  display: none;\r\n`\r\n","export default \"__VITE_ASSET__eac4a79a__\"","import { Row } from '../../Home/Container'\r\nimport { Icon, IconButton } from '../Usual'\r\nimport {\r\n  Button,\r\n  LoginForm,\r\n  TextInput,\r\n  Title,\r\n} from '../styled-components/LoginForm'\r\nimport useFetchAndLoad from '../../../hooks/useFetchAndLoad'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useForm } from 'react-hook-form'\r\nimport { loadUserToLocalStorageAndCookie } from '../../../utilities/handleStorage.utility'\r\nimport { createUser } from '../../../redux/states/user'\r\nimport { createUserAdapter } from '../../../adapters/user.adapters'\r\nimport { registerUser, uploadImg } from '../../../services/public.services'\r\nimport { Avatar, Image, InputImage } from '../../../styled-components/Globals'\r\nimport google_icon from '../../../assets/google_icon.png'\r\nimport facebook_icon from '../../../assets/facebook_icon.png'\r\nimport { lazy, useState } from 'react'\r\nconst Loading = lazy(() => import('./Loading'))\r\nimport pic_change from '../../../assets/pic_change.png'\r\n\r\ninterface Props {\r\n  handleForm: () => void\r\n}\r\n\r\ninterface Inputs {\r\n  name: string\r\n  email: string\r\n  password: string\r\n}\r\n\r\nconst Register = ({ handleForm }: Props) => {\r\n  const { loading, callEndpoint } = useFetchAndLoad()\r\n  const [pic, setPic] = useState(pic_change)\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<Inputs>()\r\n\r\n  const onSubmit = async ({ email, password, name }: Inputs) => {\r\n    const user = await callEndpoint(\r\n      registerUser({ email, password, name, pic })\r\n    )\r\n    loadUserToLocalStorageAndCookie(user)\r\n    dispatch(createUser(createUserAdapter(user)))\r\n    navigate('/')\r\n  }\r\n\r\n  const uploadImage = async (files: any) => {\r\n    const response = await callEndpoint(uploadImg(files))\r\n    setPic(response.data.url)\r\n  }\r\n\r\n  if (loading) return <Loading></Loading>\r\n\r\n  return (\r\n    <LoginForm autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\r\n      <Title color=\"#278048\">Registrarse</Title>\r\n      <Row>\r\n        <IconButton href=\"http://localhost:5000/api/user/login/google\">\r\n          <Icon\r\n            type={'icon1'}\r\n            width=\"15rem\"\r\n            height=\"1rem\"\r\n            alt=\"google_icon\"\r\n            src={google_icon}\r\n          ></Icon>\r\n        </IconButton>\r\n        <IconButton href=\"#\">\r\n          <Icon\r\n            type={'icon1'}\r\n            width=\"15rem\"\r\n            height=\"1rem\"\r\n            alt=\"facebook_icon\"\r\n            src={facebook_icon}\r\n          ></Icon>\r\n        </IconButton>\r\n        <IconButton href=\"#\">\r\n          <Icon\r\n            type={'icon1'}\r\n            width=\"15rem\"\r\n            height=\"1rem\"\r\n            alt=\"twitter_icon\"\r\n            src=\"\"\r\n          ></Icon>\r\n        </IconButton>\r\n      </Row>\r\n      <Avatar htmlFor=\"input\">\r\n        <InputImage\r\n          id=\"input\"\r\n          type=\"file\"\r\n          accept=\".jpg,.jpeg,.png\"\r\n          onChange={(e: any) => uploadImage(e.target.files[0])}\r\n        ></InputImage>\r\n        <Image src={pic}></Image>\r\n      </Avatar>\r\n      <TextInput\r\n        placeholder=\"Nombres\"\r\n        {...register('name', {\r\n          required: 'Ingrese nombres',\r\n        })}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Correo electr칩nico\"\r\n        {...register('email', {\r\n          required: 'Ingrese email',\r\n          pattern: {\r\n            value:\r\n              /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            message: 'Email invalido',\r\n          },\r\n        })}\r\n      />\r\n      <TextInput\r\n        type={'password'}\r\n        placeholder=\"Contrase침a\"\r\n        {...register('password', {\r\n          required: 'Ingrese contrase침a',\r\n        })}\r\n      />\r\n      <TextInput placeholder=\"Confirmar contrase침a\" />\r\n      <Row>\r\n        <Button display=\"null\" color=\"#00CC4B\" type=\"submit\">\r\n          Registrarse\r\n        </Button>\r\n        <Button\r\n          display=\"none\"\r\n          onClick={handleForm}\r\n          color=\"#4a4a4abd\"\r\n          type=\"button\"\r\n        >\r\n          Ingresar\r\n        </Button>\r\n      </Row>\r\n    </LoginForm>\r\n  )\r\n}\r\n\r\nexport default Register\r\n"],"file":"assets/Register.6496e9f3.js"}